jobs:
  checkstyle:
    name: Run checkstyle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-package: jdk
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Run checkstyle with Maven
      run: mvn clean verify -B -Pcheckstyle -Dmaven.test.skip=true
  coveralls:
    if: ${{ github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/')
      || github.ref == 'refs/heads/master') }}
    name: Run coveralls
    needs: integration-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      run: git checkout "${GITHUB_REF:11}"
    - continue-on-error: true
      run: git submodule sync
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-package: jdk
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Run Coveralls with Maven
      run: mvn clean test jacoco:report coveralls:report -B -Pcoveralls -DrepoToken=${{
        secrets.CoverallsRepoTokenSecret }}
  deploy-snapshot:
    if: ${{ github.event_name != 'pull_request' && !startsWith(github.ref, 'refs/tags/')
      && github.ref == 'refs/heads/master' }}
    name: Deploy snapshot
    needs: integration-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-package: jdk
        java-version: 11
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      env:
        CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
        CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
      name: Deploy snapshot with Maven
      run: mvn clean deploy -B --settings=./.buildscript/settings.xml
  integration-test:
    name: Run integration test with Java ${{ matrix.java_version }} and Maven ${{
      matrix.maven_version }}
    needs: checkstyle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java_version }}
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-package: jdk
        java-version: ${{ matrix.java_version }}
    - continue-on-error: true
      name: Setup Maven ${{ matrix.maven_version }}
      run: /bin/bash -c 'if [[ -n "${{ matrix.maven_version }}" ]]; then \ echo "Downloading
        Maven ${{ matrix.maven_version }}...."; if [[ "${{ matrix.maven_version }}"
        == "3.0" ]]; then wget https://archive.apache.org/dist/maven/binaries/apache-maven-3.0-bin.zip
        || terminate 1; else wget https://archive.apache.org/dist/maven/maven-3/${{
        matrix.maven_version }}/binaries/apache-maven-${{ matrix.maven_version }}-bin.zip
        || terminate 1; fi; unzip -qq apache-maven-${{ matrix.maven_version }}-bin.zip
        || terminate 1; export M2_HOME=$PWD/apache-maven-${{ matrix.maven_version
        }}; export PATH=$M2_HOME/bin:$PATH; mvn -version; fi'
    - continue-on-error: true
      name: Setup M2_HOME Environment variable
      run: echo "M2_HOME=${PWD}/apache-maven-${{ matrix.maven_version }}" >> $GITHUB_ENV
    - continue-on-error: true
      name: Setup System Path to use the custom Maven
      run: echo "${M2_HOME}/bin" >> $GITHUB_PATH
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-maven-${{ matrix.maven_version }}-m2-${{ hashFiles('**/pom.xml')
          }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-maven-${{ matrix.maven_version }}-m2
    - continue-on-error: true
      name: Verify Setup of Maven ${{ matrix.maven_version }}
      run: bash -c "echo ${M2_HOME}; echo ${PATH}; mvn -version"
    - continue-on-error: true
      name: Install a test version with Maven
      run: mvn clean install -B --settings=./.buildscript/settings.xml
    - continue-on-error: true
      name: Run the local testversion with Maven
      run: mvn clean initialize -B -Pdemo -Dmaven.test.skip=true --settings=./.buildscript/settings.xml
    - continue-on-error: true
      name: Validate if the testversion has produced the desired output
      run: /bin/bash -c '[[ -f target/testing.properties ]] && cat target/testing.properties
        || exit 1;'
    strategy:
      matrix:
        java_version:
        - '11'
        maven_version:
        - 3.6.3
        - 3.8.8
        - 3.9.6
        - 4.0.0-alpha-13
  test:
    name: Run basic test with Java ${{ matrix.java_version }}
    needs: checkstyle
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java_version }}
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-package: jdk
        java-version: ${{ matrix.java_version }}
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Build with Maven
      run: mvn clean verify javadoc:javadoc -B
    strategy:
      matrix:
        java_version:
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
        - '21'
name: Java CI
on:
  repository_dispatch:
    types: trigger-ga___default-tests.yml
